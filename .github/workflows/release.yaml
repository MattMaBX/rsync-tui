name: Build and Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'   # 打 tag 触发，例如 v1.0.0

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        shell: bash
        run: |
          # 设置系统名
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            SYSNAME=windows
            EXT=.exe
          elif [[ "${{ runner.os }}" == "Linux" ]]; then
            SYSNAME=linux
            EXT=
          else
            SYSNAME=macos
            EXT=
          fi

          # 用 PyInstaller 打包
          pyinstaller --onefile rsync-tui.py

          # 重命名生成的可执行文件
          mv dist/rsync-tui${EXT} dist/rsync-tui-${SYSNAME}${EXT}

          # 删除原始文件（如果有）
          [ -f dist/rsync-tui${EXT} ] && rm dist/rsync-tui${EXT}

          ls dist

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: rsync-tui-${{ runner.os }}
          path: dist/rsync-tui-*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/rsync-tui-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}